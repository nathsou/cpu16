pub module RegisterFile (
    i_clk: input clock,
    i_rst: input reset,
    i_count_enable: input logic,
    i_write_enable: input logic,
    i_write_dest: input logic<3>,
    i_write_data: input logic<16>,
    i_read_src1: input logic<3>,
    i_read_src2: input logic<3>,
    o_read_data1: output logic<16>,
    o_read_data2: output logic<16>,
    o_program_counter: output logic<16>,
) {
    var r_regs: logic<16>[8];

    always_ff (i_clk, i_rst) {
        if_reset {
            r_regs[0] = '0;
            r_regs[7] = '0;
        } else if i_write_enable && i_write_dest != 3'd0 {
            r_regs[i_write_dest] = i_write_data;
        }
        
        if i_count_enable && !(i_write_enable && i_write_dest == 3'd7) {
            r_regs[7] = r_regs[7] + 1;
        }
    }

    assign o_read_data1 = r_regs[i_read_src1];
    assign o_read_data2 = r_regs[i_read_src2];
    assign o_program_counter = r_regs[7];
}
